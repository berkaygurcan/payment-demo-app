import { createAsyncThunk, createSlice } from "@reduxjs/toolkit";

import packages from "../services/odevserver/controllers/auth";
const initialState = {
  value: {},
  status: "idle",
};

export const fetchPackages = createAsyncThunk(
  "packages/fetchPackages",
  async () => {
    const response = await packages.list();
    // The value we return becomes the `fulfilled` action payload
    return response.data;
  }
);

export const packagesSlice = createSlice({
  name: "packages",
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {},

  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
    builder
      .addCase(fetchPackages.pending, (state) => {
        state.status = "loading";
      })
      .addCase(fetchPackages.fulfilled, (state, action) => {
        state.status = "idle";
        state.value = action.payload;
      });
  },
});

export default packagesSlice.reducer;
